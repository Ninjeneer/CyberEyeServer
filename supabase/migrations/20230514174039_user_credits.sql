create table "public"."user_credits" (
    "id" bigint generated by default as identity not null,
    "userId" uuid,
    "remaningCredits" smallint default '0'::smallint
);


alter table "public"."user_credits" enable row level security;

CREATE UNIQUE INDEX user_credits_pkey ON public.user_credits USING btree (id);

alter table "public"."user_credits" add constraint "user_credits_pkey" PRIMARY KEY using index "user_credits_pkey";

alter table "public"."user_credits" add constraint "user_credits_userId_fkey" FOREIGN KEY ("userId") REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."user_credits" validate constraint "user_credits_userId_fkey";

create policy "Enable select for user"
on "public"."user_credits"
as permissive
for select
to authenticated
using ((auth.uid() = "userId"));